// Generated by Rec Studio 4 - build Sep 19 2015

_init()
{// addr = 0x00401CC0
    __rax = __imp____gmon_start__;
    if(__rax != 0) {
        __gmon_start__();
        return;
    }
}

_ZSt20__throw_length_errorPKc()
{// addr = 0x00401CF0
    goto __imp___ZSt20__throw_length_errorPKc;
}

_ZNSaIcED2Ev()
{// addr = 0x00401D00
    goto __imp___ZNSaIcED2Ev;
}

_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv()
{// addr = 0x00401D10
    goto __imp___ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv;
}

_ZSt24__throw_out_of_range_fmtPKcz()
{// addr = 0x00401D20
    goto __imp___ZSt24__throw_out_of_range_fmtPKcz;
}

_Znam()
{// addr = 0x00401D30
    goto __imp___Znam;
}

_ZdlPv()
{// addr = 0x00401D40
    goto __imp___ZdlPv;
}

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm()
{// addr = 0x00401D50
    goto __imp___ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm;
}

__cxa_throw_bad_array_new_length()
{// addr = 0x00401D70
    goto __imp____cxa_throw_bad_array_new_length;
}

_ZNSt8ios_base4InitC1Ev()
{// addr = 0x00401D80
    goto __imp___ZNSt8ios_base4InitC1Ev;
}

__libc_start_main()
{// addr = 0x00401D90
    goto __imp____libc_start_main;
}

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_()
{// addr = 0x00401DA0
    goto __imp___ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_;
}

_ZSt24__throw_invalid_argumentPKc()
{// addr = 0x00401DB0
    goto __imp___ZSt24__throw_invalid_argumentPKc;
}

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc()
{// addr = 0x00401DC0
    goto __imp___ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc;
}

__cxa_atexit()
{// addr = 0x00401DD0
    goto __imp____cxa_atexit;
}

_ZSt20__throw_out_of_rangePKc()
{// addr = 0x00401DE0
    goto __imp___ZSt20__throw_out_of_rangePKc;
}

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_()
{// addr = 0x00401DF0
    goto __imp___ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_;
}

std::ios_base::Init::~::Init(void )()
{// addr = 0x00401E00
    goto __imp___ZNSt8ios_base4InitD1Ev;
}

_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc()
{// addr = 0x00401E10
    goto __imp___ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc;
}

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev()
{// addr = 0x00401E20
    goto __imp___ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev;
}

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_()
{// addr = 0x00401E30
    goto __imp___ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_;
}

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev()
{// addr = 0x00401E40
    goto __imp___ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev;
}

_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode()
{// addr = 0x00401E50
    goto __imp___ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode;
}

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc()
{// addr = 0x00401E60
    goto __imp___ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc;
}

_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev()
{// addr = 0x00401E70
    goto __imp___ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev;
}

long strtol(char* __nptr, char** __endptr, int __base)
{// addr = 0x00401E80
    goto __imp__strtol;
}

_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev()
{// addr = 0x00401E90
    goto __imp___ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev;
}

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv()
{// addr = 0x00401EA0
    goto __imp___ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv;
}

_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv()
{// addr = 0x00401EB0
    goto __imp___ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv;
}

void* memmove(void* __dest, void* __src, int __n)
{// addr = 0x00401EC0
    goto __imp__memmove;
}

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm()
{// addr = 0x00401ED0
    goto __imp___ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm;
}

int vsnprintf(char* dst, int sz, char* format, _G_va_list vals)
{// addr = 0x00401EE0
    goto __imp__vsnprintf;
}

int* __errno_location()
{// addr = 0x00401EF0
    goto __imp____errno_location;
}

_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode()
{// addr = 0x00401F00
    goto __imp___ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode;
}

_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode()
{// addr = 0x00401F10
    goto __imp___ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode;
}

__stack_chk_fail()
{// addr = 0x00401F20
    goto __imp____stack_chk_fail;
}

_ZNSaIcED1Ev()
{// addr = 0x00401F30
    goto __imp___ZNSaIcED1Ev;
}

_ZSt19__throw_logic_errorPKc()
{// addr = 0x00401F50
    goto __imp___ZSt19__throw_logic_errorPKc;
}

_ZNSolsEPFRSoS_E()
{// addr = 0x00401F60
    goto __imp___ZNSolsEPFRSoS_E;
}

_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_()
{// addr = 0x00401F70
    goto __imp___ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_;
}

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_()
{// addr = 0x00401F80
    goto __imp___ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_;
}

_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev()
{// addr = 0x00401F90
    goto __imp___ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev;
}

_ZSt17__throw_bad_allocv()
{// addr = 0x00401FB0
    goto __imp___ZSt17__throw_bad_allocv;
}

_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE()
{// addr = 0x00401FC0
    goto __imp___ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE;
}

_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv()
{// addr = 0x00401FD0
    goto __imp___ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv;
}

std::endl<char , std::char_traits<char >>(std::basic_ostream& <T_T, , _>, 6)()
{// addr = 0x00401FE0
    goto __imp___ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_;
}

_ZNSaIcEC1Ev()
{// addr = 0x00402000
    goto __imp___ZNSaIcEC1Ev;
}

__gxx_personality_v0()
{// addr = 0x00402010
    goto __imp____gxx_personality_v0;
}

_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE()
{// addr = 0x00402020
    goto __imp___ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE;
}

_Znwm()
{// addr = 0x00402030
    goto __imp___Znwm;
}

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm()
{// addr = 0x00402050
    goto __imp___ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm;
}

_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv()
{// addr = 0x00402060
    goto __imp___ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv;
}

_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv()
{// addr = 0x00402070
    goto __imp___ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv;
}

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm()
{// addr = 0x00402080
    goto __imp___ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm;
}

_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev()
{// addr = 0x00402090
    goto __imp___ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev;
}

_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv()
{// addr = 0x004020A0
    goto __imp___ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv;
}

__gmon_start__()
{// addr = 0x004020B0
    goto __imp____gmon_start__;
}

_start(
    _unknown_ __rax,                       // r53
    _unknown_ __rdx                        // r56
)
{// addr = 0x004020C0
    _unknown_ _t11;                        // _t11

    _pop(__rsi);
    __r9 = __r9 & -16;
    _push(__rax);
    _push(__r9);
    __libc_start_main();
    asm("hlt");
    asm("o16 nop [rax+rax]");
    _push(_t11);
    if(6312463 -  &__TMC_END__ > 14 && 0 != 0) {
        _pop(__r8);
        goto __rax;
    }
    _pop(__r8);
}

deregister_tm_clones(
    _unknown_ __rax                        // r53
)
{// addr = 0x004020F0
    _unknown_ _t7;                         // _t7

    _push(_t7);
    if(6312463 -  &__TMC_END__ <= 14 || 0 == 0) {
        _pop(__r8);
        return;
    } else {
        _pop(__r8);
        goto __rax;
    }
}

register_tm_clones(
    _unknown_ __rsi                        // r58
)
{// addr = 0x00402130
    _unknown_ _t12;                        // _t12

    _push(_t12);
    if(( &__TMC_END__ -  &__TMC_END__ >> 3) + ( &__TMC_END__ -  &__TMC_END__ >> 3 >> 63) == 0 || 0 == 0) {
        _pop(__r8);
        return;
    } else {
        _pop(__r8);
        goto __rax;
    }
}

__do_global_dtors_aux(
    long long* __rdi,                      // r57
    _unknown_ __rsi                        // r58
)
{// addr = 0x00402170
    _unknown_ _t16;                        // _t16

    __rdi = __rdi;
    if(completed.7585 == 0) {
        _push(__r8);
        __r8 = __r9;
        deregister_tm_clones(__rax);
        _pop(__r8);
        completed.7585 = 1;
    }
    asm("repe ret");
    if( *__rdi != 0) {
        if(0 == 0) {
            goto L8;
        }
        _push(_t16);
        _t16 = __r9;
         *0();
        _pop(__r8);
L1:
        _push(_t16);
        if(( &__TMC_END__ -  &__TMC_END__ >> 3) + ( &__TMC_END__ -  &__TMC_END__ >> 3 >> 63) == 0 || 0 == 0) {
            _pop(__r8);
            return;
        } else {
            _pop(__r8);
            goto __rax;
        }
    }
L8:
    goto L1;
}

frame_dummy(
    long long* __rdi,                      // r57
    _unknown_ __rsi                        // r58
)
{// addr = 0x00402190
    _unknown_ _t16;                        // _t16

    __rdi = __rdi;
    if( *__rdi != 0) {
        if(0 == 0) {
            goto L5;
        }
        _push(_t16);
        _t16 = __r9;
         *0();
        _pop(__r8);
    } else {
L5:
    }
    _push(_t16);
    if(( &__TMC_END__ -  &__TMC_END__ >> 3) + ( &__TMC_END__ -  &__TMC_END__ >> 3 >> 63) == 0 || 0 == 0) {
        _pop(__r8);
        return;
    } else {
        _pop(__r8);
        goto __rax;
    }
}

encrypt(std::__cxx11::basic_string<char , std::char_traits<char >, std::allocator <char >>)(
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x004021B6
    signed int _v32;                       // _cfa_ffffffe0
    char _v552;                            // _cfa_fffffdd8
    char _v584;                            // _cfa_fffffdb8
    char _v616;                            // _cfa_fffffd98
    intOrPtr _v620;                        // _cfa_fffffd94
    long long _v640;                       // _cfa_fffffd80
    long long _v648;                       // _cfa_fffffd78
    _unknown_ __rbx;                       // r54
    intOrPtr _t59;                         // _t59
    char* _t75;                            // _t75

    _t75 = __rsi;
    _v640 = __rdi;
    _v648 = __rsi;
    _v32 =  *fs:0x28];
    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev();
    _v620 = 0;
    while(_v620 < flagLength) {
        _t59 = _v620;
        _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm();
         &_v616->to_string, int ?...?(_t59,  &_v616, _t59);
        _t59->O, 8, const 5* )( &_v584,  &_v616);
        _t75 =  &_v584;
        _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_();
        _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev();
        _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev();
        _v620 = _v620 + 1;
    }
    _ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev();
     &_v552->_Ios_Openmode, (16, _t75);
    _ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode();
    _ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE();
    _ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv();
    _ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev();
    if((_v32 ^  *fs:0x28]) != 0) {
        __stack_chk_fail();
        return;
    }
}

readFile(std::__cxx11::basic_string<char , std::char_traits<char >, std::allocator <char >>)(
    _unknown_ __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00402391
    signed int _v32;                       // _cfa_ffffffe0
    char _v552;                            // _cfa_fffffdd8
    _unknown_ _v584;                       // _cfa_fffffdb8
    long long _v592;                       // _cfa_fffffdb0
    long long _v600;                       // _cfa_fffffda8
    _unknown_ __rbx;                       // r54

    _v592 = __rdi;
    _v600 = __rsi;
    _v32 =  *fs:0x28];
    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev();
    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev();
    _ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode();
    _ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv();
    if(0 == 0) {
        _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc();
    } else {
        while(1) {
            _ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE();
            _ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv();
            if( &_v552 +  *((intOrPtr*)(_v552 - 24)) == 0) {
                break;
            }
            _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_();
        }
        _ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv();
    }
    _ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev();
    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev();
    if((_v32 ^  *fs:0x28]) != 0) {
        __stack_chk_fail();
        return;
    }
}

splitToArr(std::__cxx11::basic_string<char , std::char_traits<char >, std::allocator <char >>)(
    long long __rdi                        // r57
)
{// addr = 0x004024FD
    signed int _v32;                       // _cfa_ffffffe0
    intOrPtr _v424;                        // _cfa_fffffe58
    char _v456;                            // _cfa_fffffe38
    char _v488;                            // _cfa_fffffe18
    signed int _v492;                      // _cfa_fffffe14
    char _v496;                            // _cfa_fffffe10
    long long _v512;                       // _cfa_fffffe00
    _unknown_ __rbx;                       // r54
    signed int _t40;                       // _t40
    intOrPtr _t65;                         // _t65
    _unknown_ _t87;                        // _t87

    _v512 = __rdi;
    _t40 =  *fs:0x28];
    _v32 = _t40;
    _t40->_Ios_Openmode, (16, _t87);
    _ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode();
    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev();
     &_v488->vector(void )();
    while(1) {
        _ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_();
        _t65 =  *((intOrPtr*)(_v424 - 24));
        _ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv();
        if(0 == 0) {
            break;
        }
        _t65->allocator <char >>, unsigned long * , int )( &_v456,  &_v456);
        _v496 = 0;
         &_v488->O(int )( &_v496);
    }
    _t46 =  &_v488;
     &_v488->size(void )();
    if( &_v488 > 2287828610704211968) {
        __cxa_throw_bad_array_new_length();
    } else {
        _t46 =  &_v488 << 2;
        _Znam();
    }
    arr = _t46;
    _v492 = 0;
    while(1) {
         &_v488->size(void )();
        if(_v492 -  &_v488 > 0) {
            break;
        }
         &_v488->at(unsigned long )(_v492);
         *((intOrPtr*)(arr + (_v492 << 2))) = _v488;
        _v492 = _v492 + 1;
    }
     &_v488->~vector(void )();
    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev();
    _ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev();
    if((_v32 ^  *fs:0x28]) != 0) {
        __stack_chk_fail();
        return;
    }
}

decrypt, std::__cxx11::basic_string<char , std::char_traits<char >, std::allocator <char >>?...?()
{// addr = 0x0040270E
    long long _v16;                        // _cfa_fffffff0
    long long _v80;                        // _cfa_ffffffb0
    long long _v88;                        // _cfa_ffffffa8
    long long _t8;                         // _t8

    _v80 = _t8;
    _v88 = __rsi;
    _v16 =  *fs:0x28];
L1:
    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc();
    _ZNSolsEPFRSoS_E();
    goto L1;
}

main(
    _unknown_ __rdi,                       // r57
    _unknown_ __rsi                        // r58
)
{// addr = 0x0040274B
    signed int _v16;                       // _cfa_fffffff0

    __rsi = __rsi;
    __rax =  *fs:0x28];
    _v16 = __rax;
    flagLength = 16;
    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc();
    _ZNSolsEPFRSoS_E();
    if((_v16 ^  *fs:0x28]) != 0) {
        __stack_chk_fail();
        return;
    }
}

__static_initialization_and_destruction_0(int , int )(
    _unknown_ __rax,                       // r53
    _unknown_ __rdx,                       // r56
    _unknown_ __rdi,                       // r57
    _unknown_ __rsi                        // r58
)
{// addr = 0x004027A3
    intOrPtr _v12;                         // _cfa_fffffff4
    intOrPtr _v16;                         // _cfa_fffffff0
    intOrPtr _t5;                          // _t5
    intOrPtr _t8;                          // _t8

    __rsi = __rsi;
    __rdi = __rdi;
    __rax = __rax;
    _v12 = _t5;
    _v16 = _t8;
    if(_v12 != 1 || _v16 != 65535) {
        return;
    } else {
        _ZNSt8ios_base4InitC1Ev();
        __cxa_atexit();
        return;
    }
}

_GLOBAL__sub_I_flagLength(
    _unknown_ __rax,                       // r53
    _unknown_ __rdi,                       // r57
    _unknown_ __rsi                        // r58
)
{// addr = 0x004027E1
    __rax = __rax;
    __static_initialization_and_destruction_0(int , int )(__rax, __rdx, 1, 65535);
}

::operator newunsigned long , void * (
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x004027F6
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8

    __rsi = __rsi;
    __rdi = __rdi;
    _v16 = __rdi;
    _v24 = __rsi;
}

std::__cxx11::stoi(const & ::basic_string<char , std::char_traits<char >, std::allocator <char >>, unsigned long * , int )(
    _unknown_ __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00402808
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8
    intOrPtr _v28;                         // _cfa_ffffffe4
    intOrPtr _t7;                          // _t7

    _v16 = __rdi;
    _v24 = __rsi;
    _v28 = _t7;
    _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv();
    __rcx = _v24;
    _ZN9__gnu_cxx6__stoaIlicIiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PmS9_(__rcx, _v16, strtol, 4209369);
}

std::__cxx11::to_string, int ?...?(
    _unknown_ __rcx,                       // r55
    _unknown_ __rdx,                       // r56
    long long __rdi,                       // r57
    _unknown_ __rsi                        // r58
)
{// addr = 0x0040284B
    signed int _v16;                       // _cfa_fffffff0
    long long _v32;                        // _cfa_ffffffe0
    intOrPtr _v36;                         // _cfa_ffffffdc
    intOrPtr _t10;                         // _t10

    __rsi = __rsi;
    _v32 = __rdi;
    _v36 = _t10;
    _v16 =  *fs:0x28];
    _ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(_v32, __rbx, 4209374, __rsi, _v32, __rsi);
    if((_v16 ^  *fs:0x28]) != 0) {
        __stack_chk_fail();
        return;
    }
}

std::, operator| , std::_Ios_Openmode, (
    _unknown_ __rax,                       // r53
    intOrPtr __rdi,                        // r57
    intOrPtr __rsi                         // r58
)
{// addr = 0x004028AC
    intOrPtr _v12;                         // _cfa_fffffff4
    intOrPtr _v16;                         // _cfa_fffffff0

    __rsi = __rsi;
    __rdi = __rdi;
    __rax = __rax;
    _v12 = __rdi;
    _v16 = __rsi;
}

_ZN9__gnu_cxx6__stoaIlicIiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PmS9_(
    long long __rcx,                       // r55
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x004028BE
    signed int _v16;                       // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8
    intOrPtr* _v32;                        // _cfa_ffffffe0
    intOrPtr _v36;                         // _cfa_ffffffdc
    long long _v48;                        // _cfa_ffffffd0
    _unknown_ _v56;                        // _cfa_ffffffc8
    long long _v64;                        // _cfa_ffffffc0
    _unknown_ _v72;                        // _cfa_ffffffb8
    intOrPtr _v76;                         // _cfa_ffffffb4
    intOrPtr _t28;                         // _t28
    signed int _t37;                       // _t37
    long long _t38;                        // _t38
    intOrPtr* _t39;                        // _t39

    _v48 = __rdi;
    _v56 = __rsi;
    _v64 = __rdx;
    _v72 = __rcx;
    _v76 = __r8d;
    _t37 =  *fs:0x28];
    _v16 = _t37;
    __errno_location();
     *_t37 = 0;
    _t38 = _v48;
     *_t38();
    _v24 = _t38;
    _t39 = _v32;
    if(_t39 == _v64) {
        _t39 = _v56;
        _ZSt24__throw_invalid_argumentPKc();
    }
    __errno_location();
    _t28 =  *_t39;
    if(_t28 == 34 || _v24 < -2147483648 || _v24 > 2147483647) {
        _ZSt20__throw_out_of_rangePKc();
    }
    _v36 = _t28;
    if(_v72 != 0) {
         *_v72 = _v32 - _v64;
    }
    if((_v16 ^  *fs:0x28]) == 0) {
        return;
    } else {
        __stack_chk_fail();
        return;
    }
}

_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(
    _unknown_ __rax,                       // r53
    _unknown_ __rbx,                       // r54
    long long __rcx,                       // r55
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi,                       // r58
    char _a8                               // _cfa_8
)
{// addr = 0x00402990
    _unknown_ _v16;                        // _cfa_fffffff0
    long long _v160;                       // _cfa_ffffff60
    long long _v168;                       // _cfa_ffffff58
    char _v200;                            // _cfa_ffffff38
    signed int _v208;                      // _cfa_ffffff30
    long long _v216;                       // _cfa_ffffff28
    long long _v224;                       // _cfa_ffffff20
    intOrPtr _v228;                        // _cfa_ffffff1c
    intOrPtr _v232;                        // _cfa_ffffff18
    signed long long _v240;                // _cfa_ffffff10
    intOrPtr _v244;                        // _cfa_ffffff0c
    char _v245;                            // _cfa_ffffff0b
    long long _v256;                       // _cfa_ffffff00
    _unknown_ _v264;                       // _cfa_fffffef8
    long long _v272;                       // _cfa_fffffef0
    long long _v280;                       // _cfa_fffffee8
    _unknown_ _t38;                        // _t38

    _push(__rbx);
    __r9 = __r9 - 264;
    _v256 = __rdi;
    _v264 = __rsi;
    _v272 = __rdx;
    _v280 = __rcx;
    _v168 = __r10;
    _v160 = __r11;
    if(_t38 != 0) {
        asm("movaps [rbp-0x90], xmm0");
        asm("movaps [rbp-0x80], xmm1");
        asm("movaps [rbp-0x70], xmm2");
        asm("movaps [rbp-0x60], xmm3");
        asm("movaps [rbp-0x50], xmm4");
        asm("movaps [rbp-0x40], xmm5");
        asm("movaps [rbp-0x30], xmm6");
        asm("movaps [rbp-0x20], xmm7");
    }
    _v208 =  *fs:0x28];
    __r9 = __r9 - (_v272 - 1 + _v272 + 15) * 16;
    _v240 = __r9 + 15 >> 4 << 4;
    _v232 = 32;
    _v228 = 48;
    _v224 =  &_a8;
    _v216 =  &_v200;
     *_v264();
    _v244 = 1;
    _ZNSaIcEC1Ev();
     &_v245->_(7, const 3& )(_v244 + _v240, _v256, _v240);
    _ZNSaIcED1Ev();
    if((_v208 ^  *fs:0x28]) != 0) {
        __stack_chk_fail();
    }
}

std::__cxx11::basic_string<char , std::char_traits<char >, std::allocator <char >>::_Alloc_hider::~::_Alloc_hider(void )(
    long long __rdi                        // r57
)
{// addr = 0x00402B30
    long long _v16;                        // _cfa_fffffff0

    _v16 = __rdi;
    _ZNSaIcED2Ev();
}

std::move<std::__cxx11& ::basic_string<char , std::char_traits<char >, std::allocator <char >>>, , O(std::remove_reference<T_>::type::::O, 8)(
    long long __rdi                        // r57
)
{// addr = 0x00402B4B
    long long _v16;                        // _cfa_fffffff0

    __rdi = __rdi;
    _v16 = __rdi;
}

std::, operator+ <char , std::char_traits<char >, std::allocator <char >>(std::__cxx11::basic_string<T_T, , _, , T_>::::O, 8, const 5* )(
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00402B59
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8
    long long _v32;                        // _cfa_ffffffe0

    _v16 = __rdi;
    _v24 = __rsi;
    _v32 = __rdx;
    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc();
    _v24->O, 8)();
    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_();
}

std::vector<int , std::allocator <int >>::vector(void )(
    long long __rdi                        // r57
)
{// addr = 0x00402BA0
    long long _v16;                        // _cfa_fffffff0

    _v16 = __rdi;
    __rax = _v16;
    __rax->_Vector_base(void )();
}

std::vector<int , std::allocator <int >>::~vector(void )(
    long long __rdi                        // r57
)
{// addr = 0x00402BBC
    _unknown_ _v16;                        // _cfa_fffffff0

    _v16 = __rdi;
    _v16->_M_get_Tp_allocator(void )();
     *_v16->allocator & <T, , _>)( *((intOrPtr*)(_v16 + 8)));
    _v16->~_Vector_base, void ?...?();
}

std::move<int & >, , O(std::remove_reference<T_>::type::::O, 2)(
    long long __rdi                        // r57
)
{// addr = 0x00402C00
    long long _v16;                        // _cfa_fffffff0

    __rdi = __rdi;
    _v16 = __rdi;
}

std::vector<int , std::allocator <int >>::push_back::::O(int )(
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00402C0E
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8

    _v16 = __rdi;
    _v24 = __rsi;
    _t5 = _v24;
    _v24->O, 2)();
    _ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_(_v16, _t5);
}

std::vector<int , std::allocator <int >>::size(void )(
    long long __rdi                        // r57
)
{// addr = 0x00402C40
    long long _v16;                        // _cfa_fffffff0

    __rdi = __rdi;
    _v16 = __rdi;
}

std::vector<int , std::allocator <int >>::at(unsigned long )(
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00402C66
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8

    _v16 = __rdi;
    _v24 = __rsi;
    _v16->_M_range_check(unsigned long )(_v24);
    _v16->operator[] (unsigned long )(_v24);
}

std::__cxx11::basic_string<char , std::char_traits<char >, std::allocator <char >>::::basic_string<operator(cast) * >::::T::::_(7, const 3& )(
    long long __rcx,                       // r55
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00402C9E
    long long _v32;                        // _cfa_ffffffe0
    long long _v40;                        // _cfa_ffffffd8
    long long _v48;                        // _cfa_ffffffd0
    long long _v56;                        // _cfa_ffffffc8
    _unknown_ __rbx;                       // r54

    _v32 = __rdi;
    _v40 = __rsi;
    _v48 = __rdx;
    _v56 = __rcx;
    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv();
    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_();
    _v48->_, 7)(_v32, _v40);
}

std::_Vector_base<int , std::allocator <int >>::_Vector_impl::~::_Vector_impl(void )(
    long long __rdi                        // r57
)
{// addr = 0x00402D14
    long long _v16;                        // _cfa_fffffff0

    _v16 = __rdi;
    __rax = _v16;
    __rax->~(void )();
}

std::_Vector_base<int , std::allocator <int >>::_Vector_base(void )(
    long long __rdi                        // r57
)
{// addr = 0x00402D30
    long long _v16;                        // _cfa_fffffff0

    _v16 = __rdi;
    __rax = _v16;
    __rax->_Vector_impl(void )();
}

std::_Vector_base<int , std::allocator <int >>::~_Vector_base, void ?...?(
    long long __rdi                        // r57
)
{// addr = 0x00402D4C
    _unknown_ _v16;                        // _cfa_fffffff0

    _v16 = __rdi;
     *((intOrPtr*)(_v16 + 16)) -  *_v16 >> 2->_M_deallocate(int * , unsigned long )(_v16,  *_v16);
    _v16->_Vector_impl(void )();
}

std::_Vector_base<int , std::allocator <int >>::_M_get_Tp_allocator(void )(
    long long __rdi                        // r57
)
{// addr = 0x00402D9C
    long long _v16;                        // _cfa_fffffff0

    __rdi = __rdi;
    _v16 = __rdi;
}

std::_Destroy<int * , int >(void , , T, , _, 1, std::allocator & <T, , _>)(
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00402DAA
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8
    long long _v32;                        // _cfa_ffffffe0
    long long _t6;                         // _t6

    _v16 = __rdi;
    _v24 = __rsi;
    _v32 = _t6;
    __rax = _v16;
    __rax->_Destroy<int * >(void , , T, , _, 1)(_v24);
}

std::forward<int >, , O, , T, , _(std::remove_reference& <0>::type)(
    long long __rdi                        // r57
)
{// addr = 0x00402DD4
    long long _v16;                        // _cfa_fffffff0

    __rdi = __rdi;
    _v16 = __rdi;
}

_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_(
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00402DE2
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8

    _v16 = __rdi;
    _v24 = __rsi;
    if( *((intOrPtr*)(_v16 + 8)) ==  *((intOrPtr*)(_v16 + 16))) {
        _t21 = _v24;
        _v24->type)();
        _ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJiEEEvDpOT_(_t21, _v16, _t21);
        return;
    }
    _v24->type)();
    _ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_(_v16,  *((intOrPtr*)(_v16 + 8)));
     *((long long*)(_v16 + 8)) =  *((intOrPtr*)(_v16 + 8)) + 4;
}

std::vector<int , std::allocator <int >>::_M_range_check(unsigned long )(
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00402E64
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8
    intOrPtr _t11;                         // _t11

    _v16 = __rdi;
    _v24 = __rsi;
    _t11 = _v16;
    _t11->size(void )();
    if(_t11 - _v24 >= 0) {
        _v16->size(void )();
        _ZSt24__throw_out_of_range_fmtPKcz();
        return;
    }
}

std::vector<int , std::allocator <int >>::operator[] (unsigned long )(
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00402EB4
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8

    __rsi = __rsi;
    __rdi = __rdi;
    _v16 = __rdi;
    _v24 = __rsi;
}

std::__cxx11::basic_string<char , std::char_traits<char >, std::allocator <char >>::_M_construct<char * >(void ::::T::::_, 7)(
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00402ED4
    signed int _v16;                       // _cfa_fffffff0
    long long _v32;                        // _cfa_ffffffe0
    long long _v40;                        // _cfa_ffffffd8
    long long _v48;                        // _cfa_ffffffd0

    _v32 = __rdi;
    _v40 = __rsi;
    _v48 = __rdx;
    _v16 =  *fs:0x28];
    __r9 = __r9 - 8;
    _push(__r10);
    _v48->__false_type?...?(_v32, _v40);
    __r9 = __r9 + 16;
    if((_v16 ^  *fs:0x28]) != 0) {
        __stack_chk_fail();
        return;
    }
}

std::_Vector_base<int , std::allocator <int >>::_Vector_impl::::_Vector_impl(void )(
    long long __rdi                        // r57
)
{// addr = 0x00402F30
    _unknown_ _v16;                        // _cfa_fffffff0

    _v16 = __rdi;
    _v16->(void )();
     *_v16 = 0;
     *((long long*)(_v16 + 8)) = 0;
     *((long long*)(_v16 + 16)) = 0;
}

std::allocator <int >::~(void )(
    long long __rdi                        // r57
)
{// addr = 0x00402F6E
    long long _v16;                        // _cfa_fffffff0

    _v16 = __rdi;
    __rax = _v16;
    __rax->new_allocator(void )(__rax);
}

std::_Vector_base<int , std::allocator <int >>::_M_deallocate(int * , unsigned long )(
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00402F8A
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8
    long long _v32;                        // _cfa_ffffffe0

    _v16 = __rdi;
    _v24 = __rsi;
    _v32 = __rdx;
    if(_v24 != 0) {
        __rax = _v16;
        _v32->deallocate(0& , int * , unsigned long )(__rax, _v24);
        return;
    }
}

std::_Destroy<int * >(void , , T, , _, 1)(
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00402FBF
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8

    _v16 = __rdi;
    _v24 = __rsi;
    __rax = _v16;
    __rax->_, 3)(__rax, _v24);
}

_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_(
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00402FE5
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8
    long long _v32;                        // _cfa_ffffffe0
    long long _t9;                         // _t9

    _v16 = __rdi;
    _v24 = __rsi;
    _v32 = _t9;
    _v32->type)();
    _ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_(_v16, _v24);
}

_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJiEEEvDpOT_(
    _unknown_ __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x0040301E
    long long _v32;                        // _cfa_ffffffe0
    signed int _v40;                       // _cfa_ffffffd8
    long long _v48;                        // _cfa_ffffffd0
    _unknown_ _v64;                        // _cfa_ffffffc0
    long long _v72;                        // _cfa_ffffffb8
    signed int _t44;                       // _t44
    long long _t45;                        // _t45
    long long _t54;                        // _t54

    _v64 = __rdi;
    _v72 = __rsi;
    _t44 = _v64;
    _t44->_M_check_len(unsigned long , char * )();
    _v40 = _t44;
    _t45 = _v64;
    _t45->_M_allocate(unsigned long )(_v40);
    _v32 = _t45;
    _v48 = _v32;
    _v72->type)();
    _t48 = _v64;
    _v64->size(void )();
    _ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_(_v64, _t48 * 4 + _v32);
    _v48 = 0;
    _v64->_M_get_Tp_allocator(void )();
    _t54 =  *_v64;
    _v32->allocator <int >>, , T(, , _, , T, , _3, 2, , T, _)(_t54,  *((intOrPtr*)(_v64 + 8)));
    _v48 = _t54;
    _v48 = _v48 + 4;
    _v64->_M_get_Tp_allocator(void )();
     *_v64->allocator & <T, , _>)( *((intOrPtr*)(_v64 + 8)));
     *((intOrPtr*)(_v64 + 16)) -  *_v64 >> 2->_M_deallocate(int * , unsigned long )(_v64,  *_v64);
     *_v64 = _v32;
     *((long long*)(_v64 + 8)) = _v48;
     *((long long*)(_v64 + 16)) = _v40 * 4 + _v32;
}

std::__cxx11::basic_string<char , std::char_traits<char >, std::allocator <char >>::_M_construct_aux<char * >, void ::::T::::_, 7, std::__false_type?...?(
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00403208
    signed int _v16;                       // _cfa_fffffff0
    long long _v32;                        // _cfa_ffffffe0
    long long _v40;                        // _cfa_ffffffd8
    long long _v48;                        // _cfa_ffffffd0

    _v32 = __rdi;
    _v40 = __rsi;
    _v48 = __rdx;
    _v16 =  *fs:0x28];
    __r9 = __r9 - 8;
    _push(__r10);
    _v48->forward_iterator_tag)(_v32, _v40);
    __r9 = __r9 + 16;
    if((_v16 ^  *fs:0x28]) != 0) {
        __stack_chk_fail();
        return;
    }
}

std::allocator <int >::(void )(
    long long __rdi                        // r57
)
{// addr = 0x00403264
    long long _v16;                        // _cfa_fffffff0

    _v16 = __rdi;
    __rax = _v16;
    __rax->new_allocator(void )(__rax);
}

__gnu_cxx::new_allocator<int >::~__gnu_cxx::new_allocator(void )(
    _unknown_ __rax,                       // r53
    long long __rdi                        // r57
)
{// addr = 0x00403280
    long long _v16;                        // _cfa_fffffff0

    __rdi = __rdi;
    __rax = __rax;
    _v16 = __rdi;
}

std::allocator_traits<std::allocator <int >>::deallocate(0& , int * , unsigned long )(
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x0040328B
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8
    long long _v32;                        // _cfa_ffffffe0

    _v16 = __rdi;
    _v24 = __rsi;
    _v32 = __rdx;
    __rax = _v16;
    _v32->deallocate, int * , unsigned long ?...?(__rax, _v24);
}

std::_Destroy_aux<bool , E>::__destroy<int * >(void ::::T::::_, 3)(
    _unknown_ __rax,                       // r53
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x004032B9
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8

    __rsi = __rsi;
    __rdi = __rdi;
    __rax = __rax;
    _v16 = __rdi;
    _v24 = __rsi;
}

_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_(
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x004032C8
    long long _v32;                        // _cfa_ffffffe0
    _unknown_ _v40;                        // _cfa_ffffffd8
    _unknown_ _v48;                        // _cfa_ffffffd0
    _unknown_ __rbx;                       // r54
    intOrPtr* _t6;                         // _t6
    intOrPtr* _t7;                         // _t7

    _v32 = __rdi;
    _v40 = __rsi;
    _v48 = __rdx;
    _t6 = _v48;
    _t6->type)();
    __ebx =  *_t6;
    _t7 = _v40;
    4->operator newunsigned long , void * (_t7);
    if(_t7 != 0) {
         *_t7 = __ebx;
        return;
    }
}

std::vector<int , std::allocator <int >>::_M_check_len(unsigned long , char * )(
    long long __rdi                        // r57
)
{// addr = 0x0040330C
    signed int _v32;                       // _cfa_ffffffe0
    long long _v40;                        // _cfa_ffffffd8
    char _v48;                             // _cfa_ffffffd0
    long long _v64;                        // _cfa_ffffffc0
    char _v72;                             // _cfa_ffffffb8
    long long _v80;                        // _cfa_ffffffb0
    _unknown_ __rbx;                       // r54
    intOrPtr _t30;                         // _t30
    intOrPtr _t31;                         // _t31
    intOrPtr _t33;                         // _t33
    long long _t34;                        // _t34
    intOrPtr _t38;                         // _t38
    intOrPtr _t40;                         // _t40
    long long _t48;                        // _t48
    long long _t61;                        // _t61

    _v64 = __rdi;
    _v72 = _t61;
    _v80 = _t48;
    _v32 =  *fs:0x28];
    _t30 = _v64;
    _t30->max_size(void )();
    _t31 = _v64;
    _t31->size(void )();
    if(_t30 - _t31 - _v72 <= 0) {
        _ZSt20__throw_length_errorPKc();
    }
    _t33 = _v64;
    _t33->size(void )();
    _t34 = _v64;
    _t34->size(void )();
    _v48 = _t34;
     &_v48->max<unsigned long >, , T, , _(const 2& , 2)( &_v72);
    _v40 = _v48 + _t33;
    _t38 = _v64;
    _t38->size(void )();
    if(_t38 > _v40) {
L4:
        _v64->max_size(void )();
    } else {
        _t40 = _v64;
        _t40->max_size(void )();
        if(_t40 < _v40) {
            goto L4;
        }
    }
    if((_v32 ^  *fs:0x28]) != 0) {
        __stack_chk_fail();
        return;
    }
}

std::_Vector_base<int , std::allocator <int >>::_M_allocate(unsigned long )(
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x004033F8
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8
    _unknown_ _t6;                         // _t6

    _v16 = __rdi;
    _v24 = __rsi;
    if(_v24 == 0) {
        return;
    }
    __rax = _v16;
    __rax->allocate(0& , unsigned long )();
}

std::__uninitialized_move_if_noexcept_a<int * , 0, std::allocator <int >>, , T(, , _, , T, , _3, 2, , T, _)(
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x0040342B
    long long _v32;                        // _cfa_ffffffe0
    long long _v40;                        // _cfa_ffffffd8
    long long _v48;                        // _cfa_ffffffd0
    long long _v56;                        // _cfa_ffffffc8
    intOrPtr _t9;                          // _t9
    intOrPtr _t10;                         // _t10
    long long _t12;                        // _t12

    _v32 = __rdi;
    _v40 = __rsi;
    _v48 = __rdx;
    _v56 = _t12;
    _t9 = _v40;
    _t9->move_iterator<0>>, , T(, , _, , T, , _)();
    _t10 = _v32;
    _t10->move_iterator<0>>, , T(, , _, , T, , _)();
    _v48->allocator & <T_>)(_t10, _t9);
}

std::allocator_traits<std::allocator <int >>::destroy<int >(void , 0& ::::T::::_)(
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x0040347F
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8

    _v16 = __rdi;
    _v24 = __rsi;
    __rax = _v16;
    __rax->_)(__rax, _v24);
}

std::__cxx11::basic_string<char , std::char_traits<char >, std::allocator <char >>::_M_construct<char * >(void ::::T::::_, 7, std::forward_iterator_tag)(
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x004034A6
    signed int _v32;                       // _cfa_ffffffe0
    long long _v40;                        // _cfa_ffffffd8
    long long _v48;                        // _cfa_ffffffd0
    long long _v56;                        // _cfa_ffffffc8
    long long _v64;                        // _cfa_ffffffc0
    _unknown_ __rbx;                       // r54
    _unknown_ _t24;                        // _t24
    long long _t32;                        // _t32

    _v48 = __rdi;
    _v56 = __rsi;
    _v64 = __rdx;
    _v32 =  *fs:0x28];
    _v56->_?...?(_v56);
    if(0 == 0 || _v56 == _v64) {
        _t24 = 0;
    } else {
        _t24 = 1;
    }
    if(_t24 != 0) {
        _ZSt19__throw_logic_errorPKc();
    }
    _t32 = _v56;
    __rbx->difference_type, 2, 2)(_t32, _v64);
    _v40 = _t32;
    if(_v40 > 15) {
        _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm();
        _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc();
        _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm();
    }
    _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv();
    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_();
    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm();
    if((_v32 ^  *fs:0x28]) != 0) {
        __stack_chk_fail();
        return;
    }
}

__gnu_cxx::new_allocator<int >::__gnu_cxx::new_allocator(void )(
    _unknown_ __rax,                       // r53
    long long __rdi                        // r57
)
{// addr = 0x004035DC
    long long _v16;                        // _cfa_fffffff0

    __rdi = __rdi;
    __rax = __rax;
    _v16 = __rdi;
}

__gnu_cxx::new_allocator<int >::deallocate, int * , unsigned long ?...?(
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x004035E8
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8
    long long _v32;                        // _cfa_ffffffe0

    __rsi = __rsi;
    __rdx = __rdx;
    _v16 = __rdi;
    _v24 = __rsi;
    _v32 = __rdx;
    _ZdlPv();
}

std::vector<int , std::allocator <int >>::max_size(void )(
    long long __rdi                        // r57
)
{// addr = 0x0040360C
    long long _v16;                        // _cfa_fffffff0

    _v16 = __rdi;
    __rax = _v16;
    __rax->_M_get_Tp_allocator(void )();
    __rax->max_size(const 0& )();
}

std::max<unsigned long >, , T, , _(const 2& , 2)(
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x0040362E
    _unknown_ _v16;                        // _cfa_fffffff0
    _unknown_ _v24;                        // _cfa_ffffffe8

    __rsi = __rsi;
    __rdi = __rdi;
    _v16 = __rdi;
    _v24 = __rsi;
    if( *_v16 >=  *_v24) {
        return;
    }
}

std::allocator_traits<std::allocator <int >>::allocate(0& , unsigned long )(
    long long __rdi                        // r57
)
{// addr = 0x00403659
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8
    long long _t7;                         // _t7

    _v16 = __rdi;
    _v24 = _t7;
    __rax = _v16;
    __rax->allocate(unsigned long , void * )();
}

std::__make_move_if_noexcept_iterator<int * , std::move_iterator<0>>, , T(, , _, , T, , _)(
    long long __rdi                        // r57
)
{// addr = 0x00403683
    signed int _v16;                       // _cfa_fffffff0
    char _v24;                             // _cfa_ffffffe8
    long long _v32;                        // _cfa_ffffffe0

    _v32 = __rdi;
    _v16 =  *fs:0x28];
    __rsi = _v32;
     &_v24->move_iterator(0)(__rsi);
    if((_v16 ^  *fs:0x28]) != 0) {
        __stack_chk_fail();
        return;
    }
}

std::__uninitialized_copy_a<std::move_iterator<int * >, 1, int >, , T(, , _, , T, , _4, 3, std::allocator & <T_>)(
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x004036CB
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8
    long long _v32;                        // _cfa_ffffffe0
    long long _v40;                        // _cfa_ffffffd8
    long long _t8;                         // _t8

    _v24 = __rdi;
    _v40 = __rsi;
    _v32 = __rdx;
    _v16 = _t8;
    __rax = _v24;
    _v32->move_iterator<int * >, 1>, , T(, , _, , T, , _4, 3)(__rax, _v40);
}

__gnu_cxx::new_allocator<int >::destroy<int >(void ::::T::::_)(
    _unknown_ __rax,                       // r53
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x004036FC
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8

    __rsi = __rsi;
    __rdi = __rdi;
    __rax = __rax;
    _v16 = __rdi;
    _v24 = __rsi;
}

__gnu_cxx::__is_null_pointer<char >, bool ::::T::::_?...?(
    _unknown_ __rax,                       // r53
    long long __rdi                        // r57
)
{// addr = 0x0040370B
    long long _v16;                        // _cfa_fffffff0

    __rdi = __rdi;
    _v16 = __rdi;
}

std::distance<char * >(std::iterator_traits<T_>::difference_type, 2, 2)(
    _unknown_ __rbx,                       // r54
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x0040371D
    _unknown_ _v16;                        // _cfa_fffffff0
    signed int _v32;                       // _cfa_ffffffe0
    char _v48;                             // _cfa_ffffffd0
    long long _v56;                        // _cfa_ffffffc8

    _push(__rbx);
    __r9 = __r9 - 40;
    _v48 = __rdi;
    _v56 = __rsi;
    _v32 =  *fs:0x28];
     &_v48->iterator_category, const 2& )( &_v48);
    __r9 = __r9 - 8;
    _push(__rbx);
    _v48->random_access_iterator_tag)(_v56);
    __r9 = __r9 + 16;
    if((_v32 ^  *fs:0x28]) != 0) {
        __stack_chk_fail();
    }
}

std::allocator_traits<std::allocator <int >>::max_size(const 0& )(
    long long __rdi                        // r57
)
{// addr = 0x0040377F
    long long _v16;                        // _cfa_fffffff0

    _v16 = __rdi;
    __rax = _v16;
    __rax->max_size(void )();
}

std::_Vector_base<int , std::allocator <int >>::_M_get_Tp_allocator(void )(
    long long __rdi                        // r57
)
{// addr = 0x0040379A
    long long _v16;                        // _cfa_fffffff0

    __rdi = __rdi;
    _v16 = __rdi;
}

__gnu_cxx::new_allocator<int >::allocate(unsigned long , void * )(
    long long __rdi                        // r57
)
{// addr = 0x004037A8
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8
    long long _v32;                        // _cfa_ffffffe0
    intOrPtr _t10;                         // _t10

    _v16 = __rdi;
    _v24 = __rsi;
    _v32 = __rdx;
    _t10 = _v16;
    _t10->max_size(void )();
    if(_t10 - _v24 <= 0) {
        _ZSt17__throw_bad_allocv();
    }
    _Znwm();
}

std::move_iterator<int * >::move_iterator(0)(
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x004037EA
    _unknown_ _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8

    __rsi = __rsi;
    __rdi = __rdi;
    _v16 = __rdi;
    _v24 = __rsi;
    __rax = _v16;
     *__rax = _v24;
}

std::uninitialized_copy<std::move_iterator<int * >, 1>, , T(, , _, , T, , _4, 3)(
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00403804
    char _v9;                              // _cfa_fffffff7
    long long _v40;                        // _cfa_ffffffd8
    long long _v48;                        // _cfa_ffffffd0
    long long _v56;                        // _cfa_ffffffc8

    _v40 = __rdi;
    _v56 = __rsi;
    _v48 = __rdx;
    _v9 = 1;
    __rax = _v40;
    _v48->T(, , _, , T, , _6, 5)(__rax, _v56);
}

std::__iterator_category<char * >(std::iterator_traits<T_>::iterator_category, const 2& )(
    _unknown_ __rax,                       // r53
    long long __rdi                        // r57
)
{// addr = 0x00403835
    long long _v16;                        // _cfa_fffffff0

    __rdi = __rdi;
    __rax = __rax;
    _v16 = __rdi;
}

std::__distance<char * >(std::iterator_traits<T_>::difference_type, 2, 2, std::random_access_iterator_tag)(
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x0040383F
    long long _v16;                        // _cfa_fffffff0
    long long _v24;                        // _cfa_ffffffe8

    __rsi = __rsi;
    __rdi = __rdi;
    _v16 = __rdi;
    _v24 = __rsi;
}

__gnu_cxx::new_allocator<int >::max_size(void )(
    long long __rdi                        // r57
)
{// addr = 0x0040385C
    long long _v16;                        // _cfa_fffffff0

    __rdi = __rdi;
    _v16 = __rdi;
}

std::__uninitialized_copy<bool , E>::__uninit_copy<std::move_iterator<int * >, 3>::::T(, , _, , T, , _6, 5)(
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00403870
    long long _v24;                        // _cfa_ffffffe8
    long long _v32;                        // _cfa_ffffffe0
    long long _v40;                        // _cfa_ffffffd8

    _v24 = __rdi;
    _v40 = __rsi;
    _v32 = __rdx;
    __rax = _v24;
    _v32->move_iterator<int * >, 1>, , T(, , _, , T, , _4, 3)(__rax, _v40);
}

std::copy<std::move_iterator<int * >, 1>, , T(, , _, , T, , _4, 3)(
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x0040389D
    long long _v40;                        // _cfa_ffffffd8
    long long _v48;                        // _cfa_ffffffd0
    long long _v56;                        // _cfa_ffffffc8
    intOrPtr _t7;                          // _t7
    intOrPtr _t8;                          // _t8

    _v40 = __rdi;
    _v56 = __rsi;
    _v48 = __rdx;
    _t7 = _v56;
    _t7->iterator_type, 4)();
    _t8 = _v40;
    _t8->iterator_type, 4)();
    _v48->__copy_move_a2<bool , E, int * , 0>, , T(_, , T, , _2, 1)(_t8, _t7);
}

std::__miter_base<std::move_iterator<int * >>(std::_Miter_base<T_>::iterator_type, 4)(
    long long __rdi                        // r57
)
{// addr = 0x004038E9
    long long _v24;                        // _cfa_ffffffe8

    _v24 = __rdi;
    __rax = _v24;
    __rax->_S_base(2)();
}

std::__copy_move_a2<bool , E, int * , 0>, , T(_, , T, , _2, 1)(
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x00403903
    long long _v32;                        // _cfa_ffffffe0
    long long _v40;                        // _cfa_ffffffd8
    long long _v48;                        // _cfa_ffffffd0
    intOrPtr _t7;                          // _t7
    intOrPtr _t8;                          // _t8
    intOrPtr _t9;                          // _t9

    _v32 = __rdi;
    _v40 = __rsi;
    _v48 = __rdx;
    _t7 = _v48;
    _t7->iterator_type, 2)();
    _t8 = _v40;
    _t8->iterator_type, 2)();
    _t9 = _v32;
    _t9->iterator_type, 2)();
    _t7->__copy_move_a<bool , E, int * , 0>, , T(_, , T, , _2, 1)(_t9, _t8);
}

std::_Iter_base<std::move_iterator<int * >, bool , E>::_S_base(2)(
    long long __rdi                        // r57
)
{// addr = 0x0040395B
    char _v24;                             // _cfa_ffffffe8

    _v24 = __rdi;
     &_v24->base(void )();
}

std::__niter_base<int * >(std::_Niter_base<T_>::iterator_type, 2)(
    long long __rdi                        // r57
)
{// addr = 0x00403975
    long long _v16;                        // _cfa_fffffff0

    _v16 = __rdi;
    __rax = _v16;
    __rax->_Iter_base<int * , bool , >(_S_base0)();
}

std::__copy_move_a<bool , E, int * , 0>, , T(_, , T, , _2, 1)(
    long long __rdx,                       // r56
    long long __rdi,                       // r57
    long long __rsi                        // r58
)
{// addr = 0x0040398F
    char _v9;                              // _cfa_fffffff7
    long long _v32;                        // _cfa_ffffffe0
    long long _v40;                        // _cfa_ffffffd8
    long long _v48;                        // _cfa_ffffffd0

    _v32 = __rdi;
    _v40 = __rsi;
    _v48 = __rdx;
    _v9 = 1;
    __rax = _v32;
    _v48->_(const 3* * , 6, 4)(__rax, _v40);
}

std::move_iterator<int * >::base(void )(
    long long __rdi                        // r57
)
{// addr = 0x004039C0
    long long _v16;                        // _cfa_fffffff0

    __rdi = __rdi;
    _v16 = __rdi;
}

std::_Iter_base<int * , bool , >(_S_base0)(
    long long __rdi                        // r57
)
{// addr = 0x004039D1
    long long _v16;                        // _cfa_fffffff0

    __rdi = __rdi;
    _v16 = __rdi;
}

std::__copy_move<bool , E, bool , E, std::random_access_iterator_tag>::__copy_m<int >::::T::::_(const 3* * , 6, 4)(
    void* __rdx,          // r56
    void* __rdi,          // r57
    void* __rsi           // r58
)
{// addr = 0x004039DF
    signed int _v16;                       // _cfa_fffffff0
    void* _v32;           // _cfa_ffffffe0
    void* _v40;           // _cfa_ffffffd8
    void* _v48;           // _cfa_ffffffd0

    _v32 = __rdi;
    _v40 = __rsi;
    _v48 = __rdx;
    _v16 = _v40 - _v32 >> 2;
    if(_v16 != 0) {
        memmove(_v48, _v32, _v16 * 4);
    }
}

__libc_csu_init(
    _unknown_ __rdx,                       // r56
    _unknown_ __rdi,                       // r57
    _unknown_ __rsi,                       // r58
    _unknown_ __r15                        // r66
)
{// addr = 0x00403A50
    _unknown_ __rbx;                       // r54
    _unknown_ __r14;                       // r65
    _unknown_ __rsp;                       // r68
    _unknown_ _t3;                         // _t3
    _unknown_ _t8;                         // _t8
    signed long long _t9;                  // _t9
    _unknown_ _t14;                        // _t14
    signed long long _t17;                 // _t17
    _unknown_ _t18;                        // _t18

    __rdi = __rdi;
    _push(_t3);
    _push(_t18);
    _push(_t14);
    _push(_t8);
    __r9 = __r9 - 8;
    _t17 =  &__do_global_dtors_aux_fini_array_entry -  &__frame_dummy_init_array_entry >> 3;
    _init();
    if( &__do_global_dtors_aux_fini_array_entry != 0) {
        _t9 = 0;
        do {
             *((intOrPtr*)( &__frame_dummy_init_array_entry + _t9 * 8))();
            _t9 = _t9 + 1;
        } while(_t9 != _t17);
    }
    __r9 = __r9 + 8;
    _pop(__rbx);
    _pop(__r8);
    _pop(__r14);
    _pop(__r15);
}

__libc_csu_fini(
    intOrPtr* __rax                        // r53
)
{// addr = 0x00403AC0
    __rax = __rax;
    asm("repe ret");
     *__rax =  *__rax + __rax;
    __r9 = __r9 - 8;
    __r9 = __r9 + 8;
}

_fini(
    _unknown_ __rax                        // r53
)
{// addr = 0x00403AC4
    __rax = __rax;
}

_fini(
    _unknown_ __rax                        // r53
)
{// addr = 0x00403AC4
    __rax = __rax;
}

// Statistics:
//     373 Register nodes
//     136 Temporaries nodes
//      18 Casts
//     572 Statements
//      10 Labels
//       5 Gotos
//     143 Blocks
//    2503 Nodes
//      12 Assembly nodes
//      74 Unknown Types


Total time: 0 seconds.
